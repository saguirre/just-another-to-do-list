// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum status {
  TODO
  IN_PROGRESS
  BLOCKED
  COMPLETED
}

model users {
  id           Int        @id @default(autoincrement())
  uuid         String     @unique
  name         String?
  email        String     @unique
  stripeId     String?    @unique
  isSubscribed Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())
  projects     projects[]
  todos        todos[]
}

model projects {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  tasks     todos[]
  user      users?   @relation(fields: [userId], references: [uuid])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model todos {
  id              Int           @id @default(autoincrement())
  task            String        @db.VarChar(100)
  description     String?       @db.VarChar(1000)
  position        Int           @default(0)
  project         projects?     @relation(fields: [projectId], references: [id])
  projectId       Int?
  user            users?        @relation(fields: [userId], references: [uuid])
  userId          String
  deleted         Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
  status          status        @default(TODO)
  tags            tags?         @relation(fields: [tagsId], references: [id])
  tagsId          Int?
  todosPriority   todoPriority? @relation(fields: [todosPriorityId], references: [id])
  todosPriorityId Int?
}

model todoPriority {
  id   Int     @id @default(autoincrement())
  name String  @db.VarChar(30)
  todo todos[]
}

model tags {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  todos todos[]
}
